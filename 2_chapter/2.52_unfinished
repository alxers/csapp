Consider the following two 7-bit floating-point representations based on the IEEE
floating point format. Neither has a sign bitâ€”they can only represent nonnegative
numbers.
1. Format A
There are k = 3 exponent bits. The exponent bias is 3.
There are n = 4 fraction bits.
2. Format B
There are k = 4 exponent bits. The exponent bias is 7.
There are n = 3 fraction bits.
Below, you are given some bit patterns in Format A, and your task is to convert
them to the closest value in Format B. If necessary, you should apply the round-toeven rounding rule. In addition, give the values of numbers given by the Format A
and Format B bit patterns. Give these as whole numbers (e.g., 17) or as fractions
(e.g., 17/64).

A               B
e    f     v    e     f    v
011  0000  1    0111  000  1
101  1110  15/2    



Case 1) A
Since "e" are not all 0-s, then M = 1 + f - "Normalized" case (check IEEE standard definitions for normalized, denormalized and special values).
Since f = 0, then M = 1 => Value = 1

Case 1) B
"e" are not all 0-s, M = 1 + f - "normalized".
f = 0, M = 1 => Value = 1

Case 2) A
exp = 5, frac = 1/2 + 1/4 + 1/8 = 7/8.
E = e - Bias = 5 - 3 (??? check what "e" is here), E = 2.
M = 1 + frac = 1 + 7/8 = 15/8.
2^E * M = 4 * 15/8 = 15/2 = Value

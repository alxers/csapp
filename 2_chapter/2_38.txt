LEA instruction can perform computation of the form (a << k) + b, where k is either 0, 1, 2 or 3, and b is either 0 or some program value. The compiler often uses this instruction to perform multiplications by constant factors. F.e. 3 * a can be computed as (a << 1) + a.

Considering cases where b is either 0 or equal to a, and all possible values of k, what multiples of a can be computed with a single LEA instruction?

// Example
a = 5;
3 * 5 = 15;
0101 = 15 in binary;
0101 << 1 = 1010 = 10;
10 + 5 = 15;
// End example

Answer: Left shift by 1 doubles the value. So we have 2a + a = 3a or 2a + 0 = 2a;
So with a single LEA instruction we always get multiples a in this case.

(wrong?)